{"mappings":"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","sources":["<anon>","chilloclock.js","astro.js","throttle.js"],"sourcesContent":["/* from https://www.esrl.noaa.gov/gmd/grad/solcalc/main.js */ function $10779855fb2df467$var$calcTimeJulianCent(jd) {\n    var T = (jd - 2451545.0) / 36525.0;\n    return T;\n}\nfunction $10779855fb2df467$var$calcJDFromJulianCent(t) {\n    var JD = t * 36525.0 + 2451545.0;\n    return JD;\n}\nfunction $10779855fb2df467$var$isLeapYear(yr) {\n    return yr % 4 == 0 && yr % 100 != 0 || yr % 400 == 0;\n}\nfunction $10779855fb2df467$var$calcDateFromJD(jd) {\n    var z = Math.floor(jd + 0.5);\n    var f = jd + 0.5 - z;\n    if (z < 2299161) var A = z;\n    else {\n        var alpha = Math.floor((z - 1867216.25) / 36524.25);\n        var A = z + 1 + alpha - Math.floor(alpha / 4);\n    }\n    var B = A + 1524;\n    var C = Math.floor((B - 122.1) / 365.25);\n    var D = Math.floor(365.25 * C);\n    var E = Math.floor((B - D) / 30.6001);\n    var day = B - D - Math.floor(30.6001 * E) + f;\n    var month = E < 14 ? E - 1 : E - 13;\n    var year = month > 2 ? C - 4716 : C - 4715;\n    return {\n        \"year\": year,\n        \"month\": month,\n        \"day\": day\n    };\n}\nfunction $10779855fb2df467$var$calcDoyFromJD(jd) {\n    var date = $10779855fb2df467$var$calcDateFromJD(jd);\n    var k = $10779855fb2df467$var$isLeapYear(date.year) ? 1 : 2;\n    var doy = Math.floor(275 * date.month / 9) - k * Math.floor((date.month + 9) / 12) + date.day - 30;\n    return doy;\n}\nfunction $10779855fb2df467$var$radToDeg(angleRad) {\n    return 180.0 * angleRad / Math.PI;\n}\nfunction $10779855fb2df467$var$degToRad(angleDeg) {\n    return Math.PI * angleDeg / 180.0;\n}\nfunction $10779855fb2df467$var$calcGeomMeanLongSun(t) {\n    var L0 = 280.46646 + t * (36000.76983 + t * 0.0003032);\n    while(L0 > 360.0)L0 -= 360.0;\n    while(L0 < 0.0)L0 += 360.0;\n    return L0 // in degrees\n    ;\n}\nfunction $10779855fb2df467$var$calcGeomMeanAnomalySun(t) {\n    var M = 357.52911 + t * (35999.05029 - 0.0001537 * t);\n    return M; // in degrees\n}\nfunction $10779855fb2df467$var$calcEccentricityEarthOrbit(t) {\n    var e = 0.016708634 - t * (0.000042037 + 0.0000001267 * t);\n    return e; // unitless\n}\nfunction $10779855fb2df467$var$calcSunEqOfCenter(t) {\n    var m = $10779855fb2df467$var$calcGeomMeanAnomalySun(t);\n    var mrad = $10779855fb2df467$var$degToRad(m);\n    var sinm = Math.sin(mrad);\n    var sin2m = Math.sin(mrad + mrad);\n    var sin3m = Math.sin(mrad + mrad + mrad);\n    var C = sinm * (1.914602 - t * (0.004817 + 0.000014 * t)) + sin2m * (0.019993 - 0.000101 * t) + sin3m * 0.000289;\n    return C; // in degrees\n}\nfunction $10779855fb2df467$var$calcSunTrueLong(t) {\n    var l0 = $10779855fb2df467$var$calcGeomMeanLongSun(t);\n    var c = $10779855fb2df467$var$calcSunEqOfCenter(t);\n    var O = l0 + c;\n    return O; // in degrees\n}\nfunction $10779855fb2df467$var$calcSunTrueAnomaly(t) {\n    var m = $10779855fb2df467$var$calcGeomMeanAnomalySun(t);\n    var c = $10779855fb2df467$var$calcSunEqOfCenter(t);\n    var v = m + c;\n    return v; // in degrees\n}\nfunction $10779855fb2df467$var$calcSunRadVector(t) {\n    var v = $10779855fb2df467$var$calcSunTrueAnomaly(t);\n    var e = $10779855fb2df467$var$calcEccentricityEarthOrbit(t);\n    var R = 1.000001018 * (1 - e * e) / (1 + e * Math.cos($10779855fb2df467$var$degToRad(v)));\n    return R; // in AUs\n}\nfunction $10779855fb2df467$var$calcSunApparentLong(t) {\n    var o = $10779855fb2df467$var$calcSunTrueLong(t);\n    var omega = 125.04 - 1934.136 * t;\n    var lambda = o - 0.00569 - 0.00478 * Math.sin($10779855fb2df467$var$degToRad(omega));\n    return lambda; // in degrees\n}\nfunction $10779855fb2df467$var$calcMeanObliquityOfEcliptic(t) {\n    var seconds = 21.448 - t * (46.8150 + t * (0.00059 - t * 0.001813));\n    var e0 = 23.0 + (26.0 + seconds / 60.0) / 60.0;\n    return e0; // in degrees\n}\nfunction $10779855fb2df467$var$calcObliquityCorrection(t) {\n    var e0 = $10779855fb2df467$var$calcMeanObliquityOfEcliptic(t);\n    var omega = 125.04 - 1934.136 * t;\n    var e = e0 + 0.00256 * Math.cos($10779855fb2df467$var$degToRad(omega));\n    return e; // in degrees\n}\nfunction $10779855fb2df467$var$calcSunRtAscension(t) {\n    var e = $10779855fb2df467$var$calcObliquityCorrection(t);\n    var lambda = $10779855fb2df467$var$calcSunApparentLong(t);\n    var tananum = Math.cos($10779855fb2df467$var$degToRad(e)) * Math.sin($10779855fb2df467$var$degToRad(lambda));\n    var tanadenom = Math.cos($10779855fb2df467$var$degToRad(lambda));\n    var alpha = $10779855fb2df467$var$radToDeg(Math.atan2(tananum, tanadenom));\n    return alpha; // in degrees\n}\nfunction $10779855fb2df467$var$calcSunDeclination(t) {\n    var e = $10779855fb2df467$var$calcObliquityCorrection(t);\n    var lambda = $10779855fb2df467$var$calcSunApparentLong(t);\n    var sint = Math.sin($10779855fb2df467$var$degToRad(e)) * Math.sin($10779855fb2df467$var$degToRad(lambda));\n    var theta = $10779855fb2df467$var$radToDeg(Math.asin(sint));\n    return theta; // in degrees\n}\nfunction $10779855fb2df467$var$calcEquationOfTime(t) {\n    var epsilon = $10779855fb2df467$var$calcObliquityCorrection(t);\n    var l0 = $10779855fb2df467$var$calcGeomMeanLongSun(t);\n    var e = $10779855fb2df467$var$calcEccentricityEarthOrbit(t);\n    var m = $10779855fb2df467$var$calcGeomMeanAnomalySun(t);\n    var y = Math.tan($10779855fb2df467$var$degToRad(epsilon) / 2.0);\n    y *= y;\n    var sin2l0 = Math.sin(2.0 * $10779855fb2df467$var$degToRad(l0));\n    var sinm = Math.sin($10779855fb2df467$var$degToRad(m));\n    var cos2l0 = Math.cos(2.0 * $10779855fb2df467$var$degToRad(l0));\n    var sin4l0 = Math.sin(4.0 * $10779855fb2df467$var$degToRad(l0));\n    var sin2m = Math.sin(2.0 * $10779855fb2df467$var$degToRad(m));\n    var Etime = y * sin2l0 - 2.0 * e * sinm + 4.0 * e * y * sinm * cos2l0 - 0.5 * y * y * sin4l0 - 1.25 * e * e * sin2m;\n    return $10779855fb2df467$var$radToDeg(Etime) * 4.0; // in minutes of time\n}\nfunction $10779855fb2df467$var$calcHourAngleSunrise(lat, solarDec) {\n    var latRad = $10779855fb2df467$var$degToRad(lat);\n    var sdRad = $10779855fb2df467$var$degToRad(solarDec);\n    var HAarg = Math.cos($10779855fb2df467$var$degToRad(90.833)) / (Math.cos(latRad) * Math.cos(sdRad)) - Math.tan(latRad) * Math.tan(sdRad);\n    var HA = Math.acos(HAarg);\n    return HA; // in radians (for sunset, use -HA)\n}\nfunction $10779855fb2df467$var$isNumber(inputVal) {\n    var oneDecimal = false;\n    var inputStr = \"\" + inputVal;\n    for(var i = 0; i < inputStr.length; i++){\n        var oneChar = inputStr.charAt(i);\n        if (i == 0 && (oneChar == \"-\" || oneChar == \"+\")) continue;\n        if (oneChar == \".\" && !oneDecimal) {\n            oneDecimal = true;\n            continue;\n        }\n        if (oneChar < \"0\" || oneChar > \"9\") return false;\n    }\n    return true;\n}\nfunction $10779855fb2df467$export$fb750f7620defd41(year, month, day) {\n    if (month <= 2) {\n        year -= 1;\n        month += 12;\n    }\n    var A = Math.floor(year / 100);\n    var B = 2 - A + Math.floor(A / 4);\n    var JD = Math.floor(365.25 * (year + 4716)) + Math.floor(30.6001 * (month + 1)) + day + B - 1524.5;\n    return JD;\n}\nfunction $10779855fb2df467$var$calcRefraction(elev) {\n    if (elev > 85.0) var correction = 0.0;\n    else {\n        var te = Math.tan($10779855fb2df467$var$degToRad(elev));\n        if (elev > 5.0) var correction = 58.1 / te - 0.07 / (te * te * te) + 0.000086 / (te * te * te * te * te);\n        else if (elev > -0.575) var correction = 1735.0 + elev * (-518.2 + elev * (103.4 + elev * (-12.79 + elev * 0.711)));\n        else var correction = -20.774 / te;\n        correction = correction / 3600.0;\n    }\n    return correction;\n}\nfunction $10779855fb2df467$var$calcAzEl(T, localtime, latitude, longitude, zone) {\n    var eqTime = $10779855fb2df467$var$calcEquationOfTime(T);\n    var theta = $10779855fb2df467$var$calcSunDeclination(T);\n    var solarTimeFix = eqTime + 4.0 * longitude - 60.0 * zone;\n    var earthRadVec = $10779855fb2df467$var$calcSunRadVector(T);\n    var trueSolarTime = localtime + solarTimeFix;\n    while(trueSolarTime > 1440)trueSolarTime -= 1440;\n    var hourAngle = trueSolarTime / 4.0 - 180.0;\n    if (hourAngle < -180) hourAngle += 360.0;\n    var haRad = $10779855fb2df467$var$degToRad(hourAngle);\n    var csz = Math.sin($10779855fb2df467$var$degToRad(latitude)) * Math.sin($10779855fb2df467$var$degToRad(theta)) + Math.cos($10779855fb2df467$var$degToRad(latitude)) * Math.cos($10779855fb2df467$var$degToRad(theta)) * Math.cos(haRad);\n    if (csz > 1.0) csz = 1.0;\n    else if (csz < -1) csz = -1;\n    var zenith = $10779855fb2df467$var$radToDeg(Math.acos(csz));\n    var azDenom = Math.cos($10779855fb2df467$var$degToRad(latitude)) * Math.sin($10779855fb2df467$var$degToRad(zenith));\n    if (Math.abs(azDenom) > 0.001) {\n        var azRad = (Math.sin($10779855fb2df467$var$degToRad(latitude)) * Math.cos($10779855fb2df467$var$degToRad(zenith)) - Math.sin($10779855fb2df467$var$degToRad(theta))) / azDenom;\n        if (Math.abs(azRad) > 1.0) {\n            if (azRad < 0) azRad = -1;\n            else azRad = 1.0;\n        }\n        var azimuth = 180.0 - $10779855fb2df467$var$radToDeg(Math.acos(azRad));\n        if (hourAngle > 0.0) azimuth = -azimuth;\n    } else if (latitude > 0.0) var azimuth = 180.0;\n    else var azimuth = 0.0;\n    if (azimuth < 0.0) azimuth += 360.0;\n    var exoatmElevation = 90.0 - zenith;\n    // Atmospheric Refraction correction\n    var refractionCorrection = $10779855fb2df467$var$calcRefraction(exoatmElevation);\n    var solarZen = zenith - refractionCorrection;\n    var elevation = 90.0 - solarZen;\n    return {\n        \"azimuth\": azimuth,\n        \"elevation\": elevation\n    };\n}\nfunction $10779855fb2df467$var$calcSolNoon(jd, longitude, timezone) {\n    var tnoon = $10779855fb2df467$var$calcTimeJulianCent(jd - longitude / 360.0);\n    var eqTime = $10779855fb2df467$var$calcEquationOfTime(tnoon);\n    var solNoonOffset = 720.0 - longitude * 4 - eqTime // in minutes\n    ;\n    var newt = $10779855fb2df467$var$calcTimeJulianCent(jd + solNoonOffset / 1440.0);\n    eqTime = $10779855fb2df467$var$calcEquationOfTime(newt);\n    var solNoonLocal = 720 - longitude * 4 - eqTime + timezone * 60.0 // in minutes\n    ;\n    while(solNoonLocal < 0.0)solNoonLocal += 1440.0;\n    while(solNoonLocal >= 1440.0)solNoonLocal -= 1440.0;\n    return solNoonLocal;\n}\nfunction $10779855fb2df467$var$calcSunriseSetUTC(rise, JD, latitude, longitude) {\n    var t = $10779855fb2df467$var$calcTimeJulianCent(JD);\n    var eqTime = $10779855fb2df467$var$calcEquationOfTime(t);\n    var solarDec = $10779855fb2df467$var$calcSunDeclination(t);\n    var hourAngle = $10779855fb2df467$var$calcHourAngleSunrise(latitude, solarDec);\n    if (!rise) hourAngle = -hourAngle;\n    var delta = longitude + $10779855fb2df467$var$radToDeg(hourAngle);\n    var timeUTC = 720 - 4.0 * delta - eqTime; // in minutes\n    return timeUTC;\n}\nfunction $10779855fb2df467$export$a312825e91363456(rise, JD, latitude, longitude, timezone) {\n    if (typeof latitude !== 'number') throw new Error('latitude must be a number');\n    if (typeof longitude !== 'number') throw new Error('longitude must be a number');\n    var timeUTC = $10779855fb2df467$var$calcSunriseSetUTC(rise, JD, latitude, longitude);\n    var newTimeUTC = $10779855fb2df467$var$calcSunriseSetUTC(rise, JD + timeUTC / 1440.0, latitude, longitude);\n    if ($10779855fb2df467$var$isNumber(newTimeUTC)) {\n        var timeLocal = newTimeUTC + timezone * 60.0;\n        var riseT = $10779855fb2df467$var$calcTimeJulianCent(JD + newTimeUTC / 1440.0);\n        var riseAzEl = $10779855fb2df467$var$calcAzEl(riseT, timeLocal, latitude, longitude, timezone);\n        var azimuth = riseAzEl.azimuth;\n        var jday = JD;\n        if (timeLocal < 0.0 || timeLocal >= 1440.0) {\n            var increment = timeLocal < 0 ? 1 : -1;\n            while(timeLocal < 0.0 || timeLocal >= 1440.0){\n                timeLocal += increment * 1440.0;\n                jday -= increment;\n            }\n        }\n    } else {\n        var azimuth = -1;\n        var timeLocal = 0.0;\n        var doy = $10779855fb2df467$var$calcDoyFromJD(JD);\n        if (latitude > 66.4 && doy > 79 && doy < 267 || latitude < -66.4 && (doy < 83 || doy > 263)) //previous sunrise/next sunset\n        jday = $10779855fb2df467$var$calcJDofNextPrevRiseSet(!rise, rise, JD, latitude, longitude, timezone);\n        else jday = $10779855fb2df467$var$calcJDofNextPrevRiseSet(rise, rise, JD, latitude, longitude, timezone);\n    }\n    return {\n        \"jday\": jday,\n        \"timelocal\": timeLocal,\n        \"azimuth\": azimuth\n    };\n}\nfunction $10779855fb2df467$var$calcJDofNextPrevRiseSet(next, rise, JD, latitude, longitude, tz) {\n    var julianday = JD;\n    var increment = next ? 1.0 : -1;\n    var time = $10779855fb2df467$var$calcSunriseSetUTC(rise, julianday, latitude, longitude);\n    while(!$10779855fb2df467$var$isNumber(time)){\n        julianday += increment;\n        time = $10779855fb2df467$var$calcSunriseSetUTC(rise, julianday, latitude, longitude);\n    }\n    var timeLocal = time + tz * 60.0;\n    while(timeLocal < 0.0 || timeLocal >= 1440.0){\n        var incr = timeLocal < 0 ? 1 : -1;\n        timeLocal += incr * 1440.0;\n        julianday -= incr;\n    }\n    return julianday;\n}\n\n\nconst $34af489db025f5d1$var$DEFAULT_DELAY = 16;\nfunction $34af489db025f5d1$export$de363e709c412c8a(callback, delay = $34af489db025f5d1$var$DEFAULT_DELAY) {\n    let ready = true;\n    let callbackArgs;\n    let wasInvoked = false;\n    function readyCallback() {\n        if (wasInvoked) {\n            callback.apply(this, callbackArgs);\n            callbackArgs = undefined;\n            wasInvoked = false;\n            setTimeout(readyCallback, delay);\n        } else ready = true;\n    }\n    return function(...args) {\n        if (ready) {\n            ready = false;\n            setTimeout(readyCallback, delay);\n            callback.apply(this, args);\n        } else {\n            callbackArgs = args;\n            wasInvoked = true;\n        }\n    };\n}\n\n\nconst $0cbd7f18f9a203df$var$HELP_FADE_DELAY = 3000;\nconst $0cbd7f18f9a203df$var$MINUTES_PER_DAY = 1440;\nconst $0cbd7f18f9a203df$var$TWELVE_HOURS_IN_MS = 43200000;\nconst $0cbd7f18f9a203df$var$config = new Proxy(JSON.parse(localStorage.getItem('chilloclock') || '{}'), {\n    get (target, property) {\n        return target[property];\n    },\n    set (target, property, value) {\n        target[property] = value;\n        requestAnimationFrame(function() {\n            localStorage.setItem('chilloclock', JSON.stringify(target));\n        });\n        return true;\n    }\n});\nconst $0cbd7f18f9a203df$var$helpIconNode = document.getElementById('helpIcon');\nconst $0cbd7f18f9a203df$var$welcomeNode = document.getElementById('welcome');\nconst $0cbd7f18f9a203df$var$closeIcon = $0cbd7f18f9a203df$var$welcomeNode.querySelector('.closeIcon');\nconst $0cbd7f18f9a203df$var$clockNode = document.querySelector('.chilloclock');\nconst $0cbd7f18f9a203df$var$fadeOverlayNode = document.querySelector('.fadeOverlay');\nif ($0cbd7f18f9a203df$var$config.baseSize) $0cbd7f18f9a203df$var$clockNode.style.setProperty('--base-size', `${$0cbd7f18f9a203df$var$config.baseSize}px`);\nlet $0cbd7f18f9a203df$var$isNight = false;\nlet $0cbd7f18f9a203df$var$sunrise;\nlet $0cbd7f18f9a203df$var$sunset;\nlet $0cbd7f18f9a203df$var$updateHandle = 0;\n// during the day this will be sunrise.timelocal\n// during the night sunset.timelocal\nlet $0cbd7f18f9a203df$var$timePeriodBegin;\n// during the day this will be sunset.timelocal - sunrise.timelocal\n// during the night this will be nextDaySunrise.timelocal - sunset.timelocal\nlet $0cbd7f18f9a203df$var$timePeriodDuration;\n// 10 seconds - the angle only actually changes about once every minute\nconst $0cbd7f18f9a203df$var$updateFrequency = 10000;\nfunction $0cbd7f18f9a203df$var$update() {\n    clearTimeout($0cbd7f18f9a203df$var$updateHandle);\n    const now = new Date();\n    const timeInMinutes = now.getHours() * 60 + now.getMinutes();\n    const isAfterMidnight = timeInMinutes < $0cbd7f18f9a203df$var$timePeriodBegin;\n    const percentOfTimePeriodElapsed = isAfterMidnight ? (timeInMinutes + $0cbd7f18f9a203df$var$MINUTES_PER_DAY - $0cbd7f18f9a203df$var$sunset.timelocal) / $0cbd7f18f9a203df$var$timePeriodDuration : (timeInMinutes - $0cbd7f18f9a203df$var$timePeriodBegin) / $0cbd7f18f9a203df$var$timePeriodDuration;\n    if (percentOfTimePeriodElapsed > 1) {\n        $0cbd7f18f9a203df$var$initClock($0cbd7f18f9a203df$var$config.geolocation.latitude, $0cbd7f18f9a203df$var$config.geolocation.longitude);\n        return;\n    }\n    // narrow interpretation of twilight as 10 minutes preceding sunset/sunrise\n    const isTwilight = isAfterMidnight ? $0cbd7f18f9a203df$var$sunrise.timelocal - timeInMinutes < 10 : $0cbd7f18f9a203df$var$sunset.timelocal - timeInMinutes < 10;\n    if (isTwilight) {\n        if (isAfterMidnight) {\n            if (!$0cbd7f18f9a203df$var$fadeOverlayNode.classList.contains('morningFade')) $0cbd7f18f9a203df$var$fadeOverlayNode.classList.add('morningFade');\n            else if (!$0cbd7f18f9a203df$var$fadeOverlayNode.classList.contains('nightFade')) $0cbd7f18f9a203df$var$fadeOverlayNode.classList.add('nightFade');\n        }\n    }\n    const armAngle = 180 * percentOfTimePeriodElapsed + ($0cbd7f18f9a203df$var$isNight ? 0 : 180);\n    $0cbd7f18f9a203df$var$clockNode.style.setProperty('--arm-angle', `${armAngle}deg`);\n    $0cbd7f18f9a203df$var$updateHandle = setTimeout($0cbd7f18f9a203df$var$update, $0cbd7f18f9a203df$var$updateFrequency);\n}\n$0cbd7f18f9a203df$var$helpIconNode.addEventListener('animationend', function(event) {\n    if (event.target.classList.contains('fadeout')) {\n        event.target.classList.remove('fadeout');\n        event.target.hidden = true;\n    } else event.target.classList.remove('fadein');\n});\nlet $0cbd7f18f9a203df$var$helpFadeHandle = 0;\nfunction $0cbd7f18f9a203df$var$fadeoutHelp() {\n    $0cbd7f18f9a203df$var$helpIconNode.classList.add('fadeout');\n}\nfunction $0cbd7f18f9a203df$var$showHelpIcon() {\n    clearTimeout($0cbd7f18f9a203df$var$helpFadeHandle);\n    $0cbd7f18f9a203df$var$helpIconNode.classList.remove('fadeout');\n    if ($0cbd7f18f9a203df$var$helpIconNode.hidden) {\n        $0cbd7f18f9a203df$var$helpIconNode.classList.add('fadein');\n        $0cbd7f18f9a203df$var$helpIconNode.hidden = false;\n    }\n    $0cbd7f18f9a203df$var$helpFadeHandle = setTimeout($0cbd7f18f9a203df$var$fadeoutHelp, $0cbd7f18f9a203df$var$HELP_FADE_DELAY);\n}\nfunction $0cbd7f18f9a203df$var$hideWelcome() {\n    $0cbd7f18f9a203df$var$welcomeNode.hidden = true;\n}\nfunction $0cbd7f18f9a203df$var$onKeydown(event) {\n    if (event.key === 'Escape') $0cbd7f18f9a203df$var$hideWelcome();\n}\ndocument.addEventListener('keydown', $0cbd7f18f9a203df$var$onKeydown);\ndocument.body.addEventListener('pointermove', (0, $34af489db025f5d1$export$de363e709c412c8a)($0cbd7f18f9a203df$var$showHelpIcon, 500));\n$0cbd7f18f9a203df$var$closeIcon.addEventListener('click', $0cbd7f18f9a203df$var$hideWelcome);\nfunction $0cbd7f18f9a203df$var$initClock(latitude, longitude) {\n    $0cbd7f18f9a203df$var$config.geolocation = {\n        latitude: latitude,\n        longitude: longitude\n    };\n    const now = new Date();\n    const timezoneOffset = -(now.getTimezoneOffset() / 60);\n    const jday = (0, $10779855fb2df467$export$fb750f7620defd41)(now.getFullYear(), now.getMonth() + 1, now.getDate());\n    $0cbd7f18f9a203df$var$sunrise = (0, $10779855fb2df467$export$a312825e91363456)(1, jday, latitude, longitude, timezoneOffset);\n    $0cbd7f18f9a203df$var$sunset = (0, $10779855fb2df467$export$a312825e91363456)(0, jday, latitude, longitude, timezoneOffset);\n    const timeInMinutes = now.getHours() * 60 + now.getMinutes();\n    // early morning of previous night\n    if (timeInMinutes < $0cbd7f18f9a203df$var$sunrise.timelocal) {\n        $0cbd7f18f9a203df$var$isNight = true;\n        const previousDay = new Date(now.getTime() - $0cbd7f18f9a203df$var$TWELVE_HOURS_IN_MS);\n        const previousJday = (0, $10779855fb2df467$export$fb750f7620defd41)(previousDay.getFullYear(), previousDay.getMonth() + 1, previousDay.getDate());\n        const previousSunset = (0, $10779855fb2df467$export$a312825e91363456)(0, previousJday, latitude, longitude, timezoneOffset);\n        $0cbd7f18f9a203df$var$timePeriodBegin = previousSunset.timelocal;\n        $0cbd7f18f9a203df$var$timePeriodDuration = $0cbd7f18f9a203df$var$sunrise.timelocal + $0cbd7f18f9a203df$var$MINUTES_PER_DAY - $0cbd7f18f9a203df$var$timePeriodBegin;\n    } else if (timeInMinutes < $0cbd7f18f9a203df$var$sunset.timelocal) {\n        $0cbd7f18f9a203df$var$isNight = false;\n        $0cbd7f18f9a203df$var$timePeriodBegin = $0cbd7f18f9a203df$var$sunrise.timelocal;\n        $0cbd7f18f9a203df$var$timePeriodDuration = $0cbd7f18f9a203df$var$sunset.timelocal - $0cbd7f18f9a203df$var$sunrise.timelocal;\n    } else {\n        $0cbd7f18f9a203df$var$isNight = true;\n        $0cbd7f18f9a203df$var$timePeriodBegin = $0cbd7f18f9a203df$var$sunset.timelocal;\n        const nextDay = new Date(now.getTime() + $0cbd7f18f9a203df$var$TWELVE_HOURS_IN_MS);\n        const nextJday = (0, $10779855fb2df467$export$fb750f7620defd41)(nextDay.getFullYear(), nextDay.getMonth() + 1, nextDay.getDate());\n        $0cbd7f18f9a203df$var$sunrise = (0, $10779855fb2df467$export$a312825e91363456)(1, nextJday, latitude, longitude, timezoneOffset);\n        $0cbd7f18f9a203df$var$timePeriodDuration = $0cbd7f18f9a203df$var$sunrise.timelocal + $0cbd7f18f9a203df$var$MINUTES_PER_DAY - $0cbd7f18f9a203df$var$timePeriodBegin;\n    }\n    if ($0cbd7f18f9a203df$var$isNight) document.body.classList.add('night');\n    else document.body.classList.remove('night');\n    $0cbd7f18f9a203df$var$hideWelcome();\n    $0cbd7f18f9a203df$var$helpFadeHandle = setTimeout($0cbd7f18f9a203df$var$fadeoutHelp, $0cbd7f18f9a203df$var$HELP_FADE_DELAY);\n    $0cbd7f18f9a203df$var$update();\n}\nconst $0cbd7f18f9a203df$var$hasGeolocation = 'geolocation' in navigator;\nfunction $0cbd7f18f9a203df$var$showLocationForm() {\n    const wikiButton = document.getElementById('wikiButton');\n    wikiButton.addEventListener('click', function() {\n        const cityInput = document.getElementById('city');\n        if (cityInput.value) window.open(`https://en.wikipedia.org/w/index.php?title=Special%3ASearch&search=${cityInput.value}`, '_blank');\n    });\n    const coordinatesForm = document.getElementById('coordinatesForm');\n    coordinatesForm.addEventListener('submit', function(event) {\n        event.preventDefault();\n        const { latitude: latitude, longitude: longitude } = coordinatesForm.elements;\n        $0cbd7f18f9a203df$var$initClock(Number(latitude.value), Number(longitude.value));\n    });\n    const locationForm = document.getElementById('locationForm');\n    locationForm.hidden = false;\n}\nfunction $0cbd7f18f9a203df$var$showWelcomeDialog() {\n    const locationButton = document.getElementById('locationButton');\n    if ($0cbd7f18f9a203df$var$hasGeolocation) locationButton.addEventListener('click', function() {\n        navigator.geolocation.getCurrentPosition(function(position) {\n            $0cbd7f18f9a203df$var$initClock(position.coords.latitude, position.coords.longitude);\n        }, $0cbd7f18f9a203df$var$showLocationForm);\n    });\n    else {\n        locationButton.hidden = true;\n        $0cbd7f18f9a203df$var$showLocationForm();\n    }\n    $0cbd7f18f9a203df$var$welcomeNode.hidden = false;\n}\nlet { geolocation: $0cbd7f18f9a203df$var$geolocation } = $0cbd7f18f9a203df$var$config;\nif ($0cbd7f18f9a203df$var$geolocation) $0cbd7f18f9a203df$var$initClock($0cbd7f18f9a203df$var$geolocation.latitude, $0cbd7f18f9a203df$var$geolocation.longitude);\nelse $0cbd7f18f9a203df$var$showWelcomeDialog();\n$0cbd7f18f9a203df$var$helpIconNode.addEventListener('click', $0cbd7f18f9a203df$var$showWelcomeDialog);\n$0cbd7f18f9a203df$var$fadeOverlayNode.addEventListener('animationend', function(event) {\n    if (event.animationName === 'nightFade') {\n        event.target.classList.remove('nightFade');\n        event.target.classList.add('night');\n    } else {\n        event.target.classList.remove('morningFade');\n        event.target.classList.remove('night');\n    }\n});\ndocument.addEventListener('keydown', function(event) {\n    let baseSize = $0cbd7f18f9a203df$var$config.baseSize || parseInt(getComputedStyle($0cbd7f18f9a203df$var$clockNode).getPropertyValue('--base-size'), 10);\n    if (event.key === '=' || event.key === '+') {\n        baseSize += 1;\n        $0cbd7f18f9a203df$var$clockNode.style.setProperty('--base-size', `${baseSize}px`);\n        $0cbd7f18f9a203df$var$config.baseSize = baseSize;\n    } else if (event.key === '-') {\n        baseSize -= 1;\n        $0cbd7f18f9a203df$var$clockNode.style.setProperty('--base-size', `${baseSize}px`);\n        $0cbd7f18f9a203df$var$config.baseSize = baseSize;\n    }\n});\n\n\n//# sourceMappingURL=chilloclock.9320c17c.js.map\n","import { calcSunriseSet, getJD } from './astro.js';\nimport { throttle } from './throttle.js';\n\nconst HELP_FADE_DELAY = 3000;\nconst MINUTES_PER_DAY = 24 * 60;\nconst TWELVE_HOURS_IN_MS = 12 * 60 * 60 * 1000;\n\nconst config = new Proxy(JSON.parse(localStorage.getItem('chilloclock') || '{}'), {\n\tget (target, property) {\n\t\treturn target[property];\n\t},\n\tset (target, property, value) {\n\t\ttarget[property] = value;\n\t\trequestAnimationFrame(function () {\n\t\t\tlocalStorage.setItem('chilloclock', JSON.stringify(target));\n\t\t});\n\n\t\treturn true;\n\t},\n});\n\nconst helpIconNode = document.getElementById('helpIcon');\nconst welcomeNode = document.getElementById('welcome');\nconst closeIcon = welcomeNode.querySelector('.closeIcon');\nconst clockNode = document.querySelector('.chilloclock');\nconst fadeOverlayNode = document.querySelector('.fadeOverlay');\n\nif (config.baseSize) {\n\tclockNode.style.setProperty('--base-size', `${config.baseSize}px`);\n}\n\nlet isNight = false;\nlet sunrise;\nlet sunset;\nlet updateHandle = 0;\n\n// during the day this will be sunrise.timelocal\n// during the night sunset.timelocal\nlet timePeriodBegin;\n\n// during the day this will be sunset.timelocal - sunrise.timelocal\n// during the night this will be nextDaySunrise.timelocal - sunset.timelocal\nlet timePeriodDuration;\n\n// 10 seconds - the angle only actually changes about once every minute\nconst updateFrequency = 10 * 1000;\n\nfunction update () {\n\tclearTimeout(updateHandle);\n\tconst now = new Date();\n\tconst timeInMinutes = (now.getHours() * 60) + now.getMinutes();\n\tconst isAfterMidnight = timeInMinutes < timePeriodBegin;\n\tconst percentOfTimePeriodElapsed = isAfterMidnight ?\n\t\t((timeInMinutes + MINUTES_PER_DAY - sunset.timelocal) / timePeriodDuration) :\n\t\t((timeInMinutes - timePeriodBegin) / timePeriodDuration);\n\n\tif (percentOfTimePeriodElapsed > 1) {\n\t\tinitClock(config.geolocation.latitude, config.geolocation.longitude);\n\t\treturn;\n\t}\n\n\t// narrow interpretation of twilight as 10 minutes preceding sunset/sunrise\n\tconst isTwilight = isAfterMidnight ?\n\t\t(sunrise.timelocal - timeInMinutes) < 10 :\n\t\t(sunset.timelocal - timeInMinutes) < 10;\n\n\tif (isTwilight) {\n\t\tif (isAfterMidnight) {\n\t\t\tif (!fadeOverlayNode.classList.contains('morningFade')) {\n\t\t\t\tfadeOverlayNode.classList.add('morningFade');\n\t\t\t}\n\t\t\telse if(!fadeOverlayNode.classList.contains('nightFade')) {\n\t\t\t\tfadeOverlayNode.classList.add('nightFade');\n\t\t\t}\n\t\t}\n\t}\n\n\tconst armAngle = (180 * percentOfTimePeriodElapsed) + (isNight ? 0 : 180);\n\tclockNode.style.setProperty('--arm-angle', `${armAngle}deg`);\n\tupdateHandle = setTimeout(update, updateFrequency);\n}\n\nhelpIconNode.addEventListener('animationend', function (event) {\n\tif (event.target.classList.contains('fadeout')) {\n\t\tevent.target.classList.remove('fadeout');\n\t\tevent.target.hidden = true;\n\t}\n\telse {\n\t\tevent.target.classList.remove('fadein');\n\t}\n});\n\nlet helpFadeHandle = 0;\nfunction fadeoutHelp () {\n\thelpIconNode.classList.add('fadeout');\n}\n\nfunction showHelpIcon () {\n\tclearTimeout(helpFadeHandle);\n\n\thelpIconNode.classList.remove('fadeout');\n\n\tif (helpIconNode.hidden) {\n\t\thelpIconNode.classList.add('fadein');\n\t\thelpIconNode.hidden = false;\n\t}\n\n\thelpFadeHandle = setTimeout(fadeoutHelp, HELP_FADE_DELAY);\n}\n\nfunction hideWelcome () {\n\twelcomeNode.hidden = true;\n}\n\nfunction onKeydown (event) {\n\tif (event.key === 'Escape') {\n\t\thideWelcome();\n\t}\n}\n\ndocument.addEventListener('keydown', onKeydown);\ndocument.body.addEventListener('pointermove', throttle(showHelpIcon, 500));\n\ncloseIcon.addEventListener('click', hideWelcome);\n\nfunction initClock (latitude, longitude) {\n\tconfig.geolocation = { latitude, longitude };\n\n\tconst now = new Date();\n\tconst timezoneOffset = -(now.getTimezoneOffset() / 60);\n\tconst jday = getJD(now.getFullYear(), now.getMonth() + 1, now.getDate());\n\tsunrise = calcSunriseSet(1, jday, latitude, longitude, timezoneOffset);\n\tsunset = calcSunriseSet(0, jday, latitude, longitude, timezoneOffset);\n\tconst timeInMinutes = (now.getHours() * 60) + now.getMinutes();\n\n\t// early morning of previous night\n\tif (timeInMinutes < sunrise.timelocal) {\n\t\tisNight = true;\n\t\tconst previousDay = new Date(now.getTime() - TWELVE_HOURS_IN_MS);\n\t\tconst previousJday = getJD(previousDay.getFullYear(), previousDay.getMonth() + 1, previousDay.getDate());\n\t\tconst previousSunset = calcSunriseSet(0, previousJday, latitude, longitude, timezoneOffset);\n\t\ttimePeriodBegin = previousSunset.timelocal;\n\t\ttimePeriodDuration = sunrise.timelocal + MINUTES_PER_DAY - timePeriodBegin;\n\t}\n\t// current day\n\telse if (timeInMinutes < sunset.timelocal) {\n\t\tisNight = false;\n\t\ttimePeriodBegin = sunrise.timelocal;\n\t\ttimePeriodDuration = sunset.timelocal - sunrise.timelocal;\n\t}\n\t// night time\n\telse {\n\t\tisNight = true;\n\t\ttimePeriodBegin = sunset.timelocal;\n\t\tconst nextDay = new Date(now.getTime() + TWELVE_HOURS_IN_MS);\n\t\tconst nextJday = getJD(nextDay.getFullYear(), nextDay.getMonth() + 1, nextDay.getDate());\n\t\tsunrise = calcSunriseSet(1, nextJday, latitude, longitude, timezoneOffset);\n\t\ttimePeriodDuration = sunrise.timelocal + MINUTES_PER_DAY - timePeriodBegin;\n\t}\n\n\tif (isNight) {\n\t\tdocument.body.classList.add('night');\n\t}\n\telse {\n\t\tdocument.body.classList.remove('night');\n\t}\n\n\thideWelcome();\n\thelpFadeHandle = setTimeout(fadeoutHelp, HELP_FADE_DELAY);\n\tupdate();\n}\n\nconst hasGeolocation = 'geolocation' in navigator;\n\nfunction showLocationForm () {\n\tconst wikiButton = document.getElementById('wikiButton');\n\twikiButton.addEventListener('click', function () {\n\t\tconst cityInput = document.getElementById('city');\n\t\tif (cityInput.value) {\n\t\t\twindow.open(`https://en.wikipedia.org/w/index.php?title=Special%3ASearch&search=${cityInput.value}`, '_blank');\n\t\t}\n\t});\n\n\tconst coordinatesForm = document.getElementById('coordinatesForm');\n\tcoordinatesForm.addEventListener('submit', function (event) {\n\t\tevent.preventDefault();\n\t\tconst { latitude, longitude } = coordinatesForm.elements;\n\t\tinitClock(Number(latitude.value), Number(longitude.value));\n\t});\n\n\tconst locationForm = document.getElementById('locationForm');\n\tlocationForm.hidden = false;\n}\n\nfunction showWelcomeDialog () {\n\tconst locationButton = document.getElementById('locationButton');\n\tif (hasGeolocation) {\n\t\tlocationButton.addEventListener('click', function () {\n\t\t\tnavigator.geolocation.getCurrentPosition(function (position) {\n\t\t\t\tinitClock(position.coords.latitude, position.coords.longitude);\n\t\t\t}, showLocationForm);\n\t\t});\n\t}\n\telse {\n\t\tlocationButton.hidden = true;\n\t\tshowLocationForm();\n\t}\n\n\twelcomeNode.hidden = false;\n}\n\nlet { geolocation } = config;\nif (geolocation) {\n\tinitClock(geolocation.latitude, geolocation.longitude);\n}\nelse {\n\tshowWelcomeDialog();\n}\n\nhelpIconNode.addEventListener('click', showWelcomeDialog);\nfadeOverlayNode.addEventListener('animationend', function (event) {\n\tif (event.animationName === 'nightFade') {\n\t\tevent.target.classList.remove('nightFade');\n\t\tevent.target.classList.add('night');\n\t}\n\telse {\n\t\tevent.target.classList.remove('morningFade');\n\t\tevent.target.classList.remove('night');\n\t}\n});\n\ndocument.addEventListener('keydown', function (event) {\n\tlet baseSize = config.baseSize ||\n\t\tparseInt(getComputedStyle(clockNode).getPropertyValue('--base-size'), 10);\n\n\tif (event.key === '=' || event.key === '+') {\n\t\tbaseSize += 1;\n\t\tclockNode.style.setProperty('--base-size', `${baseSize}px`);\n\t\tconfig.baseSize = baseSize;\n\t}\n\telse if (event.key === '-') {\n\t\tbaseSize -= 1;\n\t\tclockNode.style.setProperty('--base-size', `${baseSize}px`);\n\t\tconfig.baseSize = baseSize;\n\t}\n});\n","/* from https://www.esrl.noaa.gov/gmd/grad/solcalc/main.js */\n\nfunction calcTimeJulianCent(jd) {\n\tvar T = (jd - 2451545.0)/36525.0\n\treturn T\n}\n\nfunction calcJDFromJulianCent(t) {\n\tvar JD = t * 36525.0 + 2451545.0\n\treturn JD\n}\n\nfunction isLeapYear(yr) {\n\treturn ((yr % 4 == 0 && yr % 100 != 0) || yr % 400 == 0);\n}\n\nfunction calcDateFromJD(jd) {\n\tvar z = Math.floor(jd + 0.5);\n\tvar f = (jd + 0.5) - z;\n\tif (z < 2299161) {\n\t\tvar A = z;\n\t} else {\n\t\tvar alpha = Math.floor((z - 1867216.25)/36524.25);\n\t\tvar A = z + 1 + alpha - Math.floor(alpha/4);\n\t}\n\tvar B = A + 1524;\n\tvar C = Math.floor((B - 122.1)/365.25);\n\tvar D = Math.floor(365.25 * C);\n\tvar E = Math.floor((B - D)/30.6001);\n\tvar day = B - D - Math.floor(30.6001 * E) + f;\n\tvar month = (E < 14) ? E - 1 : E - 13;\n\tvar year = (month > 2) ? C - 4716 : C - 4715;\n\n\treturn {\"year\": year, \"month\": month, \"day\": day}\n}\n\nfunction calcDoyFromJD(jd) {\n\tvar date = calcDateFromJD(jd)\n\n\tvar k = (isLeapYear(date.year) ? 1 : 2);\n\tvar doy = Math.floor((275 * date.month)/9) - k * Math.floor((date.month + 9)/12) + date.day -30;\n\n\treturn doy;\n}\n\n\nfunction radToDeg(angleRad) {\n\treturn (180.0 * angleRad / Math.PI);\n}\n\nfunction degToRad(angleDeg) {\n\treturn (Math.PI * angleDeg / 180.0);\n}\n\nfunction calcGeomMeanLongSun(t) {\n\tvar L0 = 280.46646 + t * (36000.76983 + t*(0.0003032))\n\twhile(L0 > 360.0) {\n\t\tL0 -= 360.0\n\t}\n\twhile(L0 < 0.0) {\n\t\tL0 += 360.0\n\t}\n\treturn L0\t\t// in degrees\n}\n\nfunction calcGeomMeanAnomalySun(t) {\n\tvar M = 357.52911 + t * (35999.05029 - 0.0001537 * t);\n\treturn M;\t\t// in degrees\n}\n\nfunction calcEccentricityEarthOrbit(t) {\n\tvar e = 0.016708634 - t * (0.000042037 + 0.0000001267 * t);\n\treturn e;\t\t// unitless\n}\n\nfunction calcSunEqOfCenter(t) {\n\tvar m = calcGeomMeanAnomalySun(t);\n\tvar mrad = degToRad(m);\n\tvar sinm = Math.sin(mrad);\n\tvar sin2m = Math.sin(mrad+mrad);\n\tvar sin3m = Math.sin(mrad+mrad+mrad);\n\tvar C = sinm * (1.914602 - t * (0.004817 + 0.000014 * t)) + sin2m * (0.019993 - 0.000101 * t) + sin3m * 0.000289;\n\treturn C;\t\t// in degrees\n}\n\nfunction calcSunTrueLong(t) {\n\tvar l0 = calcGeomMeanLongSun(t);\n\tvar c = calcSunEqOfCenter(t);\n\tvar O = l0 + c;\n\treturn O;\t\t// in degrees\n}\n\nfunction calcSunTrueAnomaly(t) {\n\tvar m = calcGeomMeanAnomalySun(t);\n\tvar c = calcSunEqOfCenter(t);\n\tvar v = m + c;\n\treturn v;\t\t// in degrees\n}\n\nfunction calcSunRadVector(t) {\n\tvar v = calcSunTrueAnomaly(t);\n\tvar e = calcEccentricityEarthOrbit(t);\n\tvar R = (1.000001018 * (1 - e * e)) / (1 + e * Math.cos(degToRad(v)));\n\treturn R;\t\t// in AUs\n}\n\nfunction calcSunApparentLong(t) {\n\tvar o = calcSunTrueLong(t);\n\tvar omega = 125.04 - 1934.136 * t;\n\tvar lambda = o - 0.00569 - 0.00478 * Math.sin(degToRad(omega));\n\treturn lambda;\t\t// in degrees\n}\n\nfunction calcMeanObliquityOfEcliptic(t) {\n\tvar seconds = 21.448 - t*(46.8150 + t*(0.00059 - t*(0.001813)));\n\tvar e0 = 23.0 + (26.0 + (seconds/60.0))/60.0;\n\treturn e0;\t\t// in degrees\n}\n\nfunction calcObliquityCorrection(t) {\n\tvar e0 = calcMeanObliquityOfEcliptic(t);\n\tvar omega = 125.04 - 1934.136 * t;\n\tvar e = e0 + 0.00256 * Math.cos(degToRad(omega));\n\treturn e;\t\t// in degrees\n}\n\nfunction calcSunRtAscension(t) {\n\tvar e = calcObliquityCorrection(t);\n\tvar lambda = calcSunApparentLong(t);\n\tvar tananum = (Math.cos(degToRad(e)) * Math.sin(degToRad(lambda)));\n\tvar tanadenom = (Math.cos(degToRad(lambda)));\n\tvar alpha = radToDeg(Math.atan2(tananum, tanadenom));\n\treturn alpha;\t\t// in degrees\n}\n\nfunction calcSunDeclination(t) {\n\tvar e = calcObliquityCorrection(t);\n\tvar lambda = calcSunApparentLong(t);\n\tvar sint = Math.sin(degToRad(e)) * Math.sin(degToRad(lambda));\n\tvar theta = radToDeg(Math.asin(sint));\n\treturn theta;\t\t// in degrees\n}\n\nfunction calcEquationOfTime(t) {\n\tvar epsilon = calcObliquityCorrection(t);\n\tvar l0 = calcGeomMeanLongSun(t);\n\tvar e = calcEccentricityEarthOrbit(t);\n\tvar m = calcGeomMeanAnomalySun(t);\n\n\tvar y = Math.tan(degToRad(epsilon)/2.0);\n\ty *= y;\n\n\tvar sin2l0 = Math.sin(2.0 * degToRad(l0));\n\tvar sinm   = Math.sin(degToRad(m));\n\tvar cos2l0 = Math.cos(2.0 * degToRad(l0));\n\tvar sin4l0 = Math.sin(4.0 * degToRad(l0));\n\tvar sin2m  = Math.sin(2.0 * degToRad(m));\n\n\tvar Etime = y * sin2l0 - 2.0 * e * sinm + 4.0 * e * y * sinm * cos2l0 - 0.5 * y * y * sin4l0 - 1.25 * e * e * sin2m;\n\treturn radToDeg(Etime)*4.0;\t// in minutes of time\n}\n\nfunction calcHourAngleSunrise(lat, solarDec) {\n\tvar latRad = degToRad(lat);\n\tvar sdRad  = degToRad(solarDec);\n\tvar HAarg = (Math.cos(degToRad(90.833))/(Math.cos(latRad)*Math.cos(sdRad))-Math.tan(latRad) * Math.tan(sdRad));\n\tvar HA = Math.acos(HAarg);\n\treturn HA;\t\t// in radians (for sunset, use -HA)\n}\n\nfunction isNumber(inputVal) {\n\tvar oneDecimal = false;\n\tvar inputStr = \"\" + inputVal;\n\tfor (var i = 0; i < inputStr.length; i++) {\n\t\tvar oneChar = inputStr.charAt(i);\n\t\tif (i == 0 && (oneChar == \"-\" || oneChar == \"+\")) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (oneChar == \".\" && !oneDecimal) {\n\t\t\toneDecimal = true;\n\t\t\tcontinue;\n\t\t}\n\t\tif (oneChar < \"0\" || oneChar > \"9\") {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nexport function getJD(year, month, day) {\n\tif (month <= 2) {\n\t\tyear -= 1\n\t\tmonth += 12\n\t}\n\tvar A = Math.floor(year/100)\n\tvar B = 2 - A + Math.floor(A/4)\n\tvar JD = Math.floor(365.25*(year + 4716)) + Math.floor(30.6001*(month+1)) + day + B - 1524.5\n\treturn JD\n}\n\nfunction calcRefraction(elev) {\n\n\tif (elev > 85.0) {\n\t\tvar correction = 0.0;\n\t} else {\n\t\tvar te = Math.tan(degToRad(elev));\n\t\tif (elev > 5.0) {\n\t\t\tvar correction = 58.1 / te - 0.07 / (te*te*te) + 0.000086 / (te*te*te*te*te);\n\t\t} else if (elev > -0.575) {\n\t\t\tvar correction = 1735.0 + elev * (-518.2 + elev * (103.4 + elev * (-12.79 + elev * 0.711) ) );\n\t\t} else {\n\t\t\tvar correction = -20.774 / te;\n\t\t}\n\t\tcorrection = correction / 3600.0;\n\t}\n\n\treturn correction\n}\n\nfunction calcAzEl(T, localtime, latitude, longitude, zone) {\n\n\tvar eqTime = calcEquationOfTime(T)\n\tvar theta  = calcSunDeclination(T)\n\n\tvar solarTimeFix = eqTime + 4.0 * longitude - 60.0 * zone\n\tvar earthRadVec = calcSunRadVector(T)\n\tvar trueSolarTime = localtime + solarTimeFix\n\twhile (trueSolarTime > 1440) {\n\t\ttrueSolarTime -= 1440\n\t}\n\tvar hourAngle = trueSolarTime / 4.0 - 180.0;\n\tif (hourAngle < -180) {\n\t\thourAngle += 360.0\n\t}\n\tvar haRad = degToRad(hourAngle)\n\tvar csz = Math.sin(degToRad(latitude)) * Math.sin(degToRad(theta)) + Math.cos(degToRad(latitude)) * Math.cos(degToRad(theta)) * Math.cos(haRad)\n\tif (csz > 1.0) {\n\t\tcsz = 1.0\n\t} else if (csz < -1.0) {\n\t\tcsz = -1.0\n\t}\n\tvar zenith = radToDeg(Math.acos(csz))\n\tvar azDenom = ( Math.cos(degToRad(latitude)) * Math.sin(degToRad(zenith)) )\n\tif (Math.abs(azDenom) > 0.001) {\n\t\tvar azRad = (( Math.sin(degToRad(latitude)) * Math.cos(degToRad(zenith)) ) - Math.sin(degToRad(theta))) / azDenom\n\t\tif (Math.abs(azRad) > 1.0) {\n\t\t\tif (azRad < 0) {\n\t\t\t\tazRad = -1.0\n\t\t\t} else {\n\t\t\t\tazRad = 1.0\n\t\t\t}\n\t\t}\n\t\tvar azimuth = 180.0 - radToDeg(Math.acos(azRad))\n\t\tif (hourAngle > 0.0) {\n\t\t\tazimuth = -azimuth\n\t\t}\n\t} else {\n\t\tif (latitude > 0.0) {\n\t\t\tvar azimuth = 180.0\n\t\t} else {\n\t\t\tvar azimuth = 0.0\n\t\t}\n\t}\n\tif (azimuth < 0.0) {\n\t\tazimuth += 360.0\n\t}\n\tvar exoatmElevation = 90.0 - zenith\n\n\t// Atmospheric Refraction correction\n\tvar refractionCorrection = calcRefraction(exoatmElevation)\n\n\tvar solarZen = zenith - refractionCorrection;\n\tvar elevation = 90.0 - solarZen\n\n\treturn {\"azimuth\": azimuth, \"elevation\": elevation}\n}\n\nfunction calcSolNoon(jd, longitude, timezone) {\n\tvar tnoon = calcTimeJulianCent(jd - longitude/360.0)\n\tvar eqTime = calcEquationOfTime(tnoon)\n\tvar solNoonOffset = 720.0 - (longitude * 4) - eqTime // in minutes\n\tvar newt = calcTimeJulianCent(jd + solNoonOffset/1440.0)\n\teqTime = calcEquationOfTime(newt)\n\tvar solNoonLocal = 720 - (longitude * 4) - eqTime + (timezone*60.0)// in minutes\n\twhile (solNoonLocal < 0.0) {\n\t\tsolNoonLocal += 1440.0;\n\t}\n\twhile (solNoonLocal >= 1440.0) {\n\t\tsolNoonLocal -= 1440.0;\n\t}\n\n\treturn solNoonLocal\n}\n\n\n\nfunction calcSunriseSetUTC(rise, JD, latitude, longitude) {\n\tvar t = calcTimeJulianCent(JD);\n\tvar eqTime = calcEquationOfTime(t);\n\tvar solarDec = calcSunDeclination(t);\n\tvar hourAngle = calcHourAngleSunrise(latitude, solarDec);\n\tif (!rise) hourAngle = -hourAngle;\n\tvar delta = longitude + radToDeg(hourAngle);\n\tvar timeUTC = 720 - (4.0 * delta) - eqTime;\t// in minutes\n\n\treturn timeUTC\n}\n\n// rise = 1 for sunrise, 0 for sunset\nexport function calcSunriseSet(rise, JD, latitude, longitude, timezone) {\n\tif (typeof latitude !== 'number') {\n\t\tthrow new Error('latitude must be a number');\n\t}\n\tif (typeof longitude !== 'number') {\n\t\tthrow new Error('longitude must be a number');\n\t}\n\n\tvar timeUTC = calcSunriseSetUTC(rise, JD, latitude, longitude);\n\tvar newTimeUTC = calcSunriseSetUTC(rise, JD + timeUTC/1440.0, latitude, longitude);\n\tif (isNumber(newTimeUTC)) {\n\t\tvar timeLocal = newTimeUTC + (timezone * 60.0)\n\t\tvar riseT = calcTimeJulianCent(JD + newTimeUTC/1440.0)\n\t\tvar riseAzEl = calcAzEl(riseT, timeLocal, latitude, longitude, timezone)\n\t\tvar azimuth = riseAzEl.azimuth\n\t\tvar jday = JD\n\t\tif ( (timeLocal < 0.0) || (timeLocal >= 1440.0) ) {\n\t\t\tvar increment = ((timeLocal < 0) ? 1 : -1)\n\t\t\twhile ((timeLocal < 0.0)||(timeLocal >= 1440.0)) {\n\t\t\t\ttimeLocal += increment * 1440.0\n\t\t\t\tjday -= increment\n\t\t\t}\n\t\t}\n\n\t} else { // no sunrise/set found\n\n\t\tvar azimuth = -1.0\n\t\tvar timeLocal = 0.0\n\t\tvar doy = calcDoyFromJD(JD)\n\t\tif ( ((latitude > 66.4) && (doy > 79) && (doy < 267)) ||\n\t\t     ((latitude < -66.4) && ((doy < 83) || (doy > 263))) ) {\n\t\t\t//previous sunrise/next sunset\n\t\t\tjday = calcJDofNextPrevRiseSet(!rise, rise, JD, latitude, longitude, timezone)\n\t\t} else {   //previous sunset/next sunrise\n\t\t\tjday = calcJDofNextPrevRiseSet(rise, rise, JD, latitude, longitude, timezone)\n\t\t}\n\t}\n\n\treturn {\"jday\": jday, \"timelocal\": timeLocal, \"azimuth\": azimuth}\n}\n\nfunction calcJDofNextPrevRiseSet(next, rise, JD, latitude, longitude, tz) {\n\n\tvar julianday = JD;\n\tvar increment = ((next) ? 1.0 : -1.0);\n\tvar time = calcSunriseSetUTC(rise, julianday, latitude, longitude);\n\n\twhile(!isNumber(time)) {\n\t\tjulianday += increment;\n\t\ttime = calcSunriseSetUTC(rise, julianday, latitude, longitude);\n\t}\n\tvar timeLocal = time + tz * 60.0\n\twhile ((timeLocal < 0.0) || (timeLocal >= 1440.0)) {\n\t\tvar incr = ((timeLocal < 0) ? 1 : -1)\n\t\ttimeLocal += (incr * 1440.0)\n\t\tjulianday -= incr\n\t}\n\n\treturn julianday;\n}\n","const DEFAULT_DELAY = 16;\nexport function throttle(callback, delay = DEFAULT_DELAY) {\n\tlet ready = true;\n\tlet callbackArgs;\n\tlet wasInvoked = false;\n\tfunction readyCallback() {\n\t\tif (wasInvoked) {\n\t\t\tcallback.apply(this, callbackArgs);\n\t\t\tcallbackArgs = undefined;\n\t\t\twasInvoked = false;\n\t\t\tsetTimeout(readyCallback, delay);\n\t\t}\n\t\telse {\n\t\t\tready = true;\n\t\t}\n\t}\n\treturn function (...args) {\n\t\tif (ready) {\n\t\t\tready = false;\n\t\t\tsetTimeout(readyCallback, delay);\n\t\t\tcallback.apply(this, args);\n\t\t}\n\t\telse {\n\t\t\tcallbackArgs = args;\n\t\t\twasInvoked = true;\n\t\t}\n\t};\n}\n"],"names":["$0cbd7f18f9a203df$var$sunrise","$0cbd7f18f9a203df$var$sunset","$0cbd7f18f9a203df$var$timePeriodBegin","$0cbd7f18f9a203df$var$timePeriodDuration","$10779855fb2df467$var$calcTimeJulianCent","jd","$10779855fb2df467$var$radToDeg","angleRad","Math","PI","$10779855fb2df467$var$degToRad","angleDeg","$10779855fb2df467$var$calcGeomMeanLongSun","t","L0","$10779855fb2df467$var$calcGeomMeanAnomalySun","$10779855fb2df467$var$calcEccentricityEarthOrbit","$10779855fb2df467$var$calcSunEqOfCenter","mrad","sinm","sin","sin2m","sin3m","$10779855fb2df467$var$calcObliquityCorrection","e0","seconds","cos","$10779855fb2df467$var$calcSunDeclination","e","lambda","$10779855fb2df467$var$calcSunApparentLong","o","asin","$10779855fb2df467$var$calcEquationOfTime","epsilon","l0","m","y","tan","sin2l0","cos2l0","sin4l0","Etime","$10779855fb2df467$var$isNumber","inputVal","oneDecimal","inputStr","i","length","oneChar","charAt","$10779855fb2df467$export$fb750f7620defd41","year","month","day","A","floor","$10779855fb2df467$var$calcSunriseSetUTC","rise","JD","latitude","longitude","latRad","sdRad","eqTime","solarDec","hourAngle","acos","$10779855fb2df467$export$a312825e91363456","timezone","Error","timeUTC","newTimeUTC","timeLocal","azimuth","riseAzEl","$10779855fb2df467$var$calcAzEl","T","localtime","zone","theta","$10779855fb2df467$var$calcSunRadVector","v","trueSolarTime","haRad","csz","zenith","azDenom","abs","azRad","refractionCorrection","$10779855fb2df467$var$calcRefraction","elev","correction","te","jday","increment","date","yr","k","doy","$10779855fb2df467$var$isLeapYear","$10779855fb2df467$var$calcDateFromJD","z","alpha","B","C","D","E","$10779855fb2df467$var$calcJDofNextPrevRiseSet","next","tz","julianday","time","incr","$0cbd7f18f9a203df$var$config","Proxy","JSON","parse","localStorage","getItem","get","target","property","set","value","requestAnimationFrame","setItem","stringify","$0cbd7f18f9a203df$var$helpIconNode","document","getElementById","$0cbd7f18f9a203df$var$welcomeNode","$0cbd7f18f9a203df$var$closeIcon","querySelector","$0cbd7f18f9a203df$var$clockNode","$0cbd7f18f9a203df$var$fadeOverlayNode","baseSize","style","setProperty","$0cbd7f18f9a203df$var$isNight","$0cbd7f18f9a203df$var$updateHandle","addEventListener","event","classList","contains","remove","hidden","$0cbd7f18f9a203df$var$helpFadeHandle","$0cbd7f18f9a203df$var$fadeoutHelp","add","$0cbd7f18f9a203df$var$hideWelcome","$0cbd7f18f9a203df$var$initClock","geolocation","now","Date","timezoneOffset","getTimezoneOffset","getFullYear","getMonth","getDate","timeInMinutes","getHours","getMinutes","timelocal","previousDay","getTime","previousSunset","nextDay","body","setTimeout","$0cbd7f18f9a203df$var$update","clearTimeout","isAfterMidnight","percentOfTimePeriodElapsed","armAngle","key","callback","delay","callbackArgs","ready","wasInvoked","readyCallback","apply","undefined","args","$0cbd7f18f9a203df$var$hasGeolocation","navigator","$0cbd7f18f9a203df$var$showLocationForm","wikiButton","cityInput","window","open","coordinatesForm","preventDefault","elements","Number","locationForm","$0cbd7f18f9a203df$var$showWelcomeDialog","locationButton","getCurrentPosition","position","coords","$0cbd7f18f9a203df$var$geolocation","animationName","parseInt","getComputedStyle","getPropertyValue"],"version":3,"file":"chilloclock.9320c17c.js.map"}